{"version":3,"sources":["components/About.js","components/Navbar.js","context/notes/noteContext.js","components/Noteitem.js","components/AddNote.js","components/Notes.js","components/Home.js","context/notes/NoteState.js","components/Alert.js","components/Login.js","components/Signup.js","App.js","index.js"],"names":["About","React","createElement","Navbar","navigate","useNavigate","location","useLocation","className","Link","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","pathname","aria-current","localStorage","getItem","onClick","handleLogout","removeItem","role","noteContext","createContext","Noteitem","props","context","useContext","deleteNote","note","updateNote","title","description","_id","showAlert","AddNote","addNote","setNote","useState","tag","onChange","e","[object Object]","target","name","value","htmlFor","aria-describedby","minLength","required","disabled","length","preventDefault","Notes","notes","getNotes","editNote","useEffect","ref","useRef","refClose","etitle","edescription","etag","currentNote","current","click","Fragment","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","map","key","Home","NoteState","host","setNotes","NoteContext","Provider","async","response","fetch","method","headers","Content-Type","auth-token","body","JSON","stringify","json","concat","newNotes","filter","parse","index","children","Alert","style","height","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Login","credentials","setCredentials","email","password","onSubmit","success","setItem","authtoken","Signup","cpassword","App","setAlert","message","setTimeout","Router","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9be28271.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nconst About = () => {\r\n \r\n  return (\r\n    <div>\r\n      This is About \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  useNavigate,\r\n  useLocation\r\n} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  let navigate=useNavigate();\r\n  const handleLogout=()=>{\r\n    localStorage.removeItem('token');\r\n    navigate('/login')\r\n  }\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          iNotebook\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className={`nav-link ${location.pathname===\"/\"?\"active\":\"\"}`} aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className={`nav-link ${location.pathname===\"/about\"?\"active\":\"\"}`} to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {!localStorage.getItem('token')?<form className=\"d-flex\">\r\n            \r\n            <Link className=\"btn btn-primary mx-2\" to=\"/login\" role=\"button\">\r\n              Login\r\n            </Link>\r\n            <Link className=\"btn btn-primary\" to=\"/signup\" role=\"button\">\r\n             SignUp\r\n            </Link>\r\n          </form>:<button onClick={handleLogout} className=\"btn btn-primary\">Logout</button>}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createContext } from \"react\";\r\n\r\nconst noteContext = createContext();\r\nexport default noteContext;","import React, { useContext } from \"react\";\r\nimport noteContext from \"../context/notes/noteContext\";\r\n\r\nconst Noteitem = (props) => {\r\n  const context = useContext(noteContext);\r\n\r\n  const { deleteNote } = context;\r\n  const { note, updateNote } = props;\r\n  return (\r\n    <div className=\"col-md-3\">\r\n      <div className=\"card my-3\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{note.title}</h5>\r\n          <p className=\"card-text\">{note.description}</p>\r\n          <i\r\n            className=\"fa-solid fa-trash-can mx-2\"\r\n            onClick={() => {\r\n              deleteNote(note._id);\r\n              props.showAlert(\"Deleted successfully\", \"success\")\r\n            }}\r\n          ></i>\r\n          <i\r\n            className=\"fa-solid fa-pen-to-square mx-2\"\r\n            onClick={() => {\r\n              updateNote(note);\r\n              \r\n            }}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Noteitem;\r\n","import React, { useContext, useState } from \"react\";\r\nimport noteContext from \"../context/notes/noteContext\";\r\nconst AddNote = (props) => {\r\n  const context = useContext(noteContext);\r\n  const { addNote } = context;\r\n\r\n  const [note, setNote] = useState({ title: \"\", description: \"\", tag: \"\" });\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    addNote(note.title, note.description, note.tag);\r\n    setNote({ title: \"\", description: \"\", tag: \"\" });\r\n    props.showAlert(\"Added successfully\", \"success\")\r\n  };\r\n  const onChange = (e) => {\r\n    setNote({ ...note, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <div className=\"container my-3\">\r\n      <h2>Add a Note</h2>\r\n      <form className=\"my-3\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"title\" className=\"form-label\">\r\n            Title\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            aria-describedby=\"emailHelp\"\r\n            value={note.title}\r\n            onChange={onChange}\r\n            minLength={5}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"description\" className=\"form-label\">\r\n            Description\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={note.description}\r\n            onChange={onChange}\r\n            minLength={5}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"tag\" className=\"form-label\">\r\n            Tag\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"tag\"\r\n            name=\"tag\"\r\n            value={note.tag}\r\n            onChange={onChange}\r\n            minLength={5}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          disabled={note.title.length < 5 || note.description.length < 5}\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleClick}\r\n        >\r\n          Add Note\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNote;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport noteContext from \"../context/notes/noteContext\";\r\nimport Noteitem from \"./Noteitem\";\r\nimport AddNote from \"./AddNote\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Notes = (props) => {\r\n  const context = useContext(noteContext);\r\n  let navigate = useNavigate();\r\n  const { notes, getNotes, editNote } = context;\r\n\r\n   useEffect(() => {\r\n    if(localStorage.getItem('token')){\r\n      getNotes();\r\n      //console.log('not success')\r\n    }else{\r\n      navigate(\"/login\");\r\n      //console.log('success')\r\n    }\r\n  }, [getNotes, navigate]);\r\n\r\n  const ref = useRef(null);\r\n  const refClose = useRef(null);\r\n\r\n  const [note, setNote] = useState({\r\n    id: \"\",\r\n    etitle: \"\",\r\n    edescription: \"\",\r\n    etag: \"\",\r\n  });\r\n  \r\n  const updateNote = (currentNote) => {\r\n    ref.current.click();\r\n    setNote({\r\n      id: currentNote._id,\r\n      etitle: currentNote.title,\r\n      edescription: currentNote.description,\r\n      etag: currentNote.tag,\r\n    });\r\n   \r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    editNote(note.id, note.etitle, note.edescription, note.etag);\r\n    refClose.current.click();\r\n    props.showAlert(\"Updated successfully\", \"success\")\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setNote({ ...note, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddNote showAlert={props.showAlert} />\r\n      <button\r\n        ref={ref}\r\n        type=\"button\"\r\n        className=\"btn btn-primary d-none\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#exampleModal\"\r\n      >\r\n        Launch demo modal\r\n      </button>\r\n\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModal\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">\r\n                Modal title\r\n              </h1>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form className=\"my-3\">\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"title\" className=\"form-label\">\r\n                    Title\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"etitle\"\r\n                    name=\"etitle\"\r\n                    value={note.etitle}\r\n                    aria-describedby=\"emailHelp\"\r\n                    onChange={onChange} minLength={5} required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"description\" className=\"form-label\">\r\n                    Description\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"edescription\"\r\n                    name=\"edescription\"\r\n                    value={note.edescription}\r\n                    onChange={onChange} minLength={5} required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"tag\" className=\"form-label\">\r\n                    Tag\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"etag\"\r\n                    name=\"etag\"\r\n                    value={note.etag}\r\n                    onChange={onChange}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                ref={refClose}\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button disabled={note.etitle.length<5||note.edescription.length<5}\r\n                onClick={handleClick}\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Update Note\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-3\">\r\n        <h2>Your Notes</h2>\r\n        <div className=\"container\">\r\n          {notes.length === 0 && \"No notes to display\"}\r\n        </div>\r\n        {notes.map((note) => {\r\n          return (\r\n            <Noteitem key={note._id} updateNote={updateNote} showAlert={props.showAlert} note={note} />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import React from \"react\";\r\n\r\nimport Notes from \"./Notes\";\r\n\r\nconst Home = (props) => {\r\n  const {showAlert}=props;\r\n  return (\r\n    <div>\r\n      <Notes showAlert={showAlert}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\n\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n  const notesInitial = [];\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  //Get all notes\r\n  const getNotes = async () => {\r\n    //TODO:Api call\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": localStorage.getItem('token')\r\n      },\r\n    });\r\n  \r\n    const json = await response.json();\r\n    setNotes(json);\r\n  }\r\n    //Add a note\r\n    const addNote = async (title, description, tag) => {\r\n      //TODO:Api call\r\n      const response = await fetch(`${host}/api/notes/addnote`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \"auth-token\": localStorage.getItem('token')\r\n        },\r\n        body: JSON.stringify({title, description, tag})\r\n      });\r\n      const note = await response.json();\r\n      setNotes(notes.concat(note))\r\n    }\r\n  \r\n    //Delete a note\r\n    const deleteNote = async (id) => {\r\n      //API call\r\n      // eslint-disable-next-line\r\n      const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"auth-token\": localStorage.getItem('token')\r\n        },\r\n      });\r\n     //const json = await response.json();\r\n     //console.log(json);\r\n      const newNotes = notes.filter((note) => {\r\n        return note._id !== id;\r\n      });\r\n      setNotes(newNotes);\r\n    };\r\n\r\n    //Edit a note\r\n    const editNote = async (id, title, description, tag) => {\r\n      \r\n        //API call\r\n        // eslint-disable-next-line\r\n        const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"auth-token\": localStorage.getItem('token')\r\n          },\r\n          body: JSON.stringify({title, description, tag}),\r\n        });\r\n       //const json = await response.json();\r\n       //console.log(json);\r\n       let newNotes= JSON.parse(JSON.stringify(notes))\r\n       for (let index = 0; index < newNotes.length; index++) {\r\n        //Logic to edit in client\r\n        const element = newNotes[index];\r\n        if (element._id === id) {\r\n          newNotes[index].title = title;\r\n          newNotes[index].description = description;\r\n          newNotes[index].tag = tag;\r\n          break;\r\n        }\r\n        \r\n      }\r\n      setNotes(newNotes);\r\n    }\r\n  \r\n    return (\r\n      <NoteContext.Provider\r\n        value={{ notes, addNote, deleteNote, editNote, getNotes }}\r\n      >\r\n        {props.children}\r\n      </NoteContext.Provider>\r\n    );\r\n  }\r\n\r\nexport default NoteState;\r\n","\r\nimport React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        if (word===\"danger\"){\r\n          word=\"error\"\r\n        }\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        \r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  let navigate = useNavigate();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ email: credentials.email, password: credentials.password })\r\n    });\r\n    const json = await response.json();\r\n    //console.log(json);\r\n    if (json.success) {\r\n      //Save the auth token and redirect \r\n      localStorage.setItem('token', json.authtoken);\r\n      navigate(\"/\");\r\n      props.showAlert(\"Logged in successfully\", \"success\")\r\n    } else {\r\n      props.showAlert(\"Invalid Details\", \"danger\")\r\n    }\r\n\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <h2>Login to continue to iNotebook</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email address</label>\r\n          <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" value={credentials.email} onChange={onChange} aria-describedby=\"emailHelp\" />\r\n          <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"current-password\" className=\"form-label\">Password</label>\r\n          <input type=\"current-password\" value={credentials.password} onChange={onChange} className=\"form-control\" name=\"password\" id=\"current-password\" />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\" >Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React,{useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Signup = (props) => {\r\n    const [credentials, setCredentials] = useState({name:\"\", email: \"\", password: \"\", cpassword:\"\"});\r\n    let navigate = useNavigate();\r\n    const handleSubmit=async (e)=>{\r\n        e.preventDefault();\r\n        const {name, email, password}=credentials;\r\n        const response=await fetch(\"http://localhost:5000/api/auth/createuser\",{\r\n            method:'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({name, email, password})\r\n          });\r\n        const json=await response.json();\r\n        if (json.success){\r\n            //Save the auth token and redirect\r\n            localStorage.setItem('token', json.authtoken);\r\n            navigate(\"/\");\r\n            props.showAlert(\"Account created successfully\", \"success\")\r\n        }else{\r\n           props.showAlert(\"Invalid credentials\", \"danger\")\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n      };\r\n    \r\n    return (\r\n        <div className=\"container mt-3\">\r\n             <h2 className=\"my-3\">Create an account to use iNotebook</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"my-3\">\r\n                    <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" onChange={onChange} aria-describedby=\"emailHelp\" />\r\n                   \r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" onChange={onChange}  aria-describedby=\"emailHelp\" />\r\n                    <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                    <input type=\"new-password\" name=\"password\" className=\"form-control\" id=\"password\" onChange={onChange} minLength={5} required />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"cpassword\" className=\"form-label\">Confirm password</label>\r\n                    <input type=\"new-password\" className=\"form-control\" name=\"cpassword\"  id=\"cpassword\" onChange={onChange} minLength={5} required />\r\n                </div>\r\n                \r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import \"./App.css\";\nimport React from 'react';\nimport About from \"./components/About\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport NoteState from \"./context/notes/NoteState\";\nimport Alert  from \"./components/Alert\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [alert, setAlert ] = useState(null);\n  const showAlert= (message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n      \n    }, 1500);\n  }\n  return (\n    <>\n      <NoteState>\n        <Router>\n          <Navbar />\n          <Alert alert={alert}/>\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Home showAlert={showAlert} />} />\n              <Route path=\"/about\" element={<About />} />\n              <Route path=\"/login\" element={<Login showAlert={showAlert}/>} />\n              <Route path=\"/signup\" element={<Signup showAlert={showAlert}/>} />\n            </Routes>\n          </div>\n        </Router>\n      </NoteState>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}